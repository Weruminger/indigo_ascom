<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="indigoLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        STMniDbq1Pk/h5s74VU8TIIAAAAASUVORK5CYII=
</value>
  </data>
</root>